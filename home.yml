
services:
  web-app:
    build:
      context: .
    container_name: app
#    command: gunicorn service.wsgi:application --bind 0.0.0.0:8000 --log-level info
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./service:/service
    env_file:
      - .env
    depends_on:
      - database

  redis:
    image: redis:7.0.5-alpine
    hostname: redis


  react-app:
    build:
      context: ./react-app
      dockerfile: Dockerfile_react_dev
    container_name: react-app
    ports:
      - "3000:3000"
    volumes:
      - ./react-app:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true  # Для работы hot-reload в Docker
#      - WATCHPACK_POLLING=true
#      - HOST=0.0.0.0  # Доступ к Vite через Docker
#

#  nginx:
#    build:
#      context: .
#      dockerfile: ./react-app/Dockerfile.nginx
#    container_name: nginx
#    ports:
#      - "80:80"
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost/api/health/"]
#      interval: 30s
#      timeout: 5s
#      retries: 3
#    depends_on:
#      - web-app
#    volumes:
##      - static_volume:/static
#      - media_volume:/media

  database:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info --concurrency=4
    env_file:
      - .env
    depends_on:
      - database
      - redis


#  celery-beat:
#    build:
#      context: .
#    entrypoint: celery
#    command: -A celery_app.app beat --loglevel=info
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - database

#  flower:
#    build:
#      context: .
#    hostname: flower
#    container_name: flower
#    entrypoint: celery
#    command: -A celery_app.app flower
#    env_file:
#      - .env
#    ports:
#      - "5555:5555"
#    depends_on:
#      - redis

volumes:
  db_data:
  static_volume:
  media_volume: